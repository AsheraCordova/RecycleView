//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidXRecyclerView\src\main\java\androidx\recyclerview\widget\ScrollbarHelper.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "J2ObjC_source.h"
#include "OrientationHelper.h"
#include "RecyclerView.h"
#include "ScrollbarHelper.h"
#include "View.h"
#include "java/lang/Boolean.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ADXScrollbarHelper ()

- (instancetype)initPackagePrivate;

@end

__attribute__((unused)) static void ADXScrollbarHelper_initPackagePrivate(ADXScrollbarHelper *self);

__attribute__((unused)) static ADXScrollbarHelper *new_ADXScrollbarHelper_initPackagePrivate(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADXScrollbarHelper *create_ADXScrollbarHelper_initPackagePrivate(void);

@implementation ADXScrollbarHelper

+ (int32_t)computeScrollOffsetWithADXRecyclerView_State:(ADXRecyclerView_State *)state
                               withADXOrientationHelper:(ADXOrientationHelper *)orientation
                                             withADView:(ADView *)startChild
                                             withADView:(ADView *)endChild
                      withADXRecyclerView_LayoutManager:(ADXRecyclerView_LayoutManager *)lm
                                            withBoolean:(bool)smoothScrollbarEnabled
                                            withBoolean:(bool)reverseLayout {
  return ADXScrollbarHelper_computeScrollOffsetWithADXRecyclerView_State_withADXOrientationHelper_withADView_withADView_withADXRecyclerView_LayoutManager_withBoolean_withBoolean_(state, orientation, startChild, endChild, lm, smoothScrollbarEnabled, reverseLayout);
}

+ (int32_t)computeScrollExtentWithADXRecyclerView_State:(ADXRecyclerView_State *)state
                               withADXOrientationHelper:(ADXOrientationHelper *)orientation
                                             withADView:(ADView *)startChild
                                             withADView:(ADView *)endChild
                      withADXRecyclerView_LayoutManager:(ADXRecyclerView_LayoutManager *)lm
                                            withBoolean:(bool)smoothScrollbarEnabled {
  return ADXScrollbarHelper_computeScrollExtentWithADXRecyclerView_State_withADXOrientationHelper_withADView_withADView_withADXRecyclerView_LayoutManager_withBoolean_(state, orientation, startChild, endChild, lm, smoothScrollbarEnabled);
}

+ (int32_t)computeScrollRangeWithADXRecyclerView_State:(ADXRecyclerView_State *)state
                              withADXOrientationHelper:(ADXOrientationHelper *)orientation
                                            withADView:(ADView *)startChild
                                            withADView:(ADView *)endChild
                     withADXRecyclerView_LayoutManager:(ADXRecyclerView_LayoutManager *)lm
                                           withBoolean:(bool)smoothScrollbarEnabled {
  return ADXScrollbarHelper_computeScrollRangeWithADXRecyclerView_State_withADXOrientationHelper_withADView_withADView_withADXRecyclerView_LayoutManager_withBoolean_(state, orientation, startChild, endChild, lm, smoothScrollbarEnabled);
}

- (instancetype)initPackagePrivate {
  ADXScrollbarHelper_initPackagePrivate(self);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 4, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(computeScrollOffsetWithADXRecyclerView_State:withADXOrientationHelper:withADView:withADView:withADXRecyclerView_LayoutManager:withBoolean:withBoolean:);
  methods[1].selector = @selector(computeScrollExtentWithADXRecyclerView_State:withADXOrientationHelper:withADView:withADView:withADXRecyclerView_LayoutManager:withBoolean:);
  methods[2].selector = @selector(computeScrollRangeWithADXRecyclerView_State:withADXOrientationHelper:withADView:withADView:withADXRecyclerView_LayoutManager:withBoolean:);
  methods[3].selector = @selector(initPackagePrivate);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "computeScrollOffset", "LADXRecyclerView_State;LADXOrientationHelper;LADView;LADView;LADXRecyclerView_LayoutManager;ZZ", "computeScrollExtent", "LADXRecyclerView_State;LADXOrientationHelper;LADView;LADView;LADXRecyclerView_LayoutManager;Z", "computeScrollRange" };
  static const J2ObjcClassInfo _ADXScrollbarHelper = { "ScrollbarHelper", "androidx.recyclerview.widget", ptrTable, methods, NULL, 7, 0x0, 4, 0, -1, -1, -1, -1, -1 };
  return &_ADXScrollbarHelper;
}

@end

int32_t ADXScrollbarHelper_computeScrollOffsetWithADXRecyclerView_State_withADXOrientationHelper_withADView_withADView_withADXRecyclerView_LayoutManager_withBoolean_withBoolean_(ADXRecyclerView_State *state, ADXOrientationHelper *orientation, ADView *startChild, ADView *endChild, ADXRecyclerView_LayoutManager *lm, bool smoothScrollbarEnabled, bool reverseLayout) {
  ADXScrollbarHelper_initialize();
  if ([((ADXRecyclerView_LayoutManager *) nil_chk(lm)) getChildCount] == 0 || [((ADXRecyclerView_State *) nil_chk(state)) getItemCount] == 0 || startChild == nil || endChild == nil) {
    return 0;
  }
  int32_t minPosition = JavaLangMath_minWithInt_withInt_([lm getPositionWithADView:startChild], [lm getPositionWithADView:endChild]);
  int32_t maxPosition = JavaLangMath_maxWithInt_withInt_([lm getPositionWithADView:startChild], [lm getPositionWithADView:endChild]);
  int32_t itemsBefore = reverseLayout ? JavaLangMath_maxWithInt_withInt_(0, [((ADXRecyclerView_State *) nil_chk(state)) getItemCount] - maxPosition - 1) : JavaLangMath_maxWithInt_withInt_(0, minPosition);
  if (!smoothScrollbarEnabled) {
    return itemsBefore;
  }
  int32_t laidOutArea = JavaLangMath_absWithInt_([((ADXOrientationHelper *) nil_chk(orientation)) getDecoratedEndWithADView:endChild] - [orientation getDecoratedStartWithADView:startChild]);
  int32_t itemRange = JavaLangMath_absWithInt_([lm getPositionWithADView:startChild] - [lm getPositionWithADView:endChild]) + 1;
  float avgSizePerRow = (float) laidOutArea / itemRange;
  return JavaLangMath_roundWithFloat_(itemsBefore * avgSizePerRow + ([orientation getStartAfterPadding] - [orientation getDecoratedStartWithADView:startChild]));
}

int32_t ADXScrollbarHelper_computeScrollExtentWithADXRecyclerView_State_withADXOrientationHelper_withADView_withADView_withADXRecyclerView_LayoutManager_withBoolean_(ADXRecyclerView_State *state, ADXOrientationHelper *orientation, ADView *startChild, ADView *endChild, ADXRecyclerView_LayoutManager *lm, bool smoothScrollbarEnabled) {
  ADXScrollbarHelper_initialize();
  if ([((ADXRecyclerView_LayoutManager *) nil_chk(lm)) getChildCount] == 0 || [((ADXRecyclerView_State *) nil_chk(state)) getItemCount] == 0 || startChild == nil || endChild == nil) {
    return 0;
  }
  if (!smoothScrollbarEnabled) {
    return JavaLangMath_absWithInt_([lm getPositionWithADView:startChild] - [lm getPositionWithADView:endChild]) + 1;
  }
  int32_t extend = [((ADXOrientationHelper *) nil_chk(orientation)) getDecoratedEndWithADView:endChild] - [orientation getDecoratedStartWithADView:startChild];
  return JavaLangMath_minWithInt_withInt_([orientation getTotalSpace], extend);
}

int32_t ADXScrollbarHelper_computeScrollRangeWithADXRecyclerView_State_withADXOrientationHelper_withADView_withADView_withADXRecyclerView_LayoutManager_withBoolean_(ADXRecyclerView_State *state, ADXOrientationHelper *orientation, ADView *startChild, ADView *endChild, ADXRecyclerView_LayoutManager *lm, bool smoothScrollbarEnabled) {
  ADXScrollbarHelper_initialize();
  if ([((ADXRecyclerView_LayoutManager *) nil_chk(lm)) getChildCount] == 0 || [((ADXRecyclerView_State *) nil_chk(state)) getItemCount] == 0 || startChild == nil || endChild == nil) {
    return 0;
  }
  if (!smoothScrollbarEnabled) {
    return [((ADXRecyclerView_State *) nil_chk(state)) getItemCount];
  }
  int32_t laidOutArea = [((ADXOrientationHelper *) nil_chk(orientation)) getDecoratedEndWithADView:endChild] - [orientation getDecoratedStartWithADView:startChild];
  int32_t laidOutRange = JavaLangMath_absWithInt_([lm getPositionWithADView:startChild] - [lm getPositionWithADView:endChild]) + 1;
  return JreFpToInt(((float) laidOutArea / laidOutRange * [((ADXRecyclerView_State *) nil_chk(state)) getItemCount]));
}

void ADXScrollbarHelper_initPackagePrivate(ADXScrollbarHelper *self) {
  NSObject_init(self);
}

ADXScrollbarHelper *new_ADXScrollbarHelper_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ADXScrollbarHelper, initPackagePrivate)
}

ADXScrollbarHelper *create_ADXScrollbarHelper_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ADXScrollbarHelper, initPackagePrivate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXScrollbarHelper)
